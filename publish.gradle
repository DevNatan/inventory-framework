apply plugin: 'maven-publish'
apply plugin: 'signing'

ext.isReleaseVersion = !version.endsWith('SNAPSHOT')

publishing {
    publications {
        javaOSSRH(MavenPublication) {
            groupId = rootProject.group
            artifactId = project.name
            version = rootProject.version
            from components.java

            pom {
                name = 'inventory-framework'
                description = 'Inventory Framework is a Bukkit Inventory API framework that allows you to create custom inventories with varied interaction treatments'
                url = 'https://github.com/DevNatan/inventory-framework'
                inceptionYear = '2020'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/DevNatan/inventory-framework/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        name.set('Natan Vieira do Nascimento')
                        email.set('natanvnascimento@gmail.com')
                        url.set('https://github.com/DevNatan')
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com/DevNatan/inventoryframework.git'
                    developerConnection = 'scm:git:https://github.com/DevNatan/inventoryframework.git'
                    url = 'https://github.com/DevNatan/inventoryframework'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = isReleaseVersion
                    ? "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                    : "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            credentials {
                username = project.findProperty('ossrh.username') ?: System.getenv('OSSRH_USERNAME')
                password = project.findProperty('ossrh.password') ?: System.getenv('OSSRH_PASSWORD')
            }
        }
    }
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask('uploadArchives') }
    useInMemoryPgpKeys(
            project.findProperty('signing.keyId') ?: System.getenv('OSSRH_SIGNING_KEY'),
            project.findProperty('signing.password') ?: System.getenv('OSSRH_SIGNING_PASSWORD')
    )
    sign publishing.publications.javaOSSRH
}